* Compass and straightedge constructor
The name should be pretty self-explanatory.

When you open it, you will, hopefully, see an empty canvas with three buttons in the top left corner:
+ 1 button, called "Points", allows you to place points in an arbitrary place on the canvas.
+ 2 button, called "Compass", gives you a way to draw circles by specifying its center and radius. If you click on something other than point, the tool will reset itself.
+ 3 button, called "Line", allows you to connect any two points. The same way, as compass, you can reset it by clicking on an empty on the canvas.

When you draw place some lines or circles, you will immediately see its intersections with all other shapes.

Even though, there are only three available tools, you can still build pretty complex constructions with it, to give you an example of something arbitrary:

[[file:img/example-drawing.png]]

/Beware, its still very early in its development, so expect bugs, inconveniences, etc... (i mean now it doesn't even have a way to hide objects or undo button...) Report bugs if you can, much appreciated./

*I wish you fun construction!*

** Building

*** Prerequisites
You need to have:

+ ~Clang~ 
+ ~CMake~
+ ~glew~
+ ~glfw~

installed on your system.

On ~Arch Linux~ you can install all of them with:
#+begin_src shell
  pacman -S --needed cmake clang glew glfw
#+end_src

If you are using other distros, use your package 
manager to look up package names, and install them.

This may or may not work on ~Windows~ or ~MacOS~, but
hasn't been tested on either.


*** Installation
*Clone this repository:*

#+begin_src shell
  git clone git@github.com:alexpaniman/sphere-raycaster.git
#+end_src

*Then, create build directory and configure:*

#+begin_src shell
  mkdir -p build
  cd build
  cmake .. -DCMAKE_CXX_COMPILER=clang++ -G Ninja -DCMAKE_BUILD_TYPE=Release
  # Make sure that you use recent clang!
  # Projects uses some pretty new features.
#+end_src

Optionally you can use ~-DCMAKE_EXPORT_COMPILE_COMMANDS=ON~ if you
want to import this project with ~clangd~ language server.

And ~-DFORCE_COLORED_OUTPUT=ON~ to get colorful diagnostics with ~Ninja~

Now compile and run (you should still in ~build~ directory):
#+begin_src shell
  ninja
  ./compass-and-straightedge
#+end_src
